buildscript {
	repositories {
		maven { url 'https://maven.aliyun.com/repository/public' }
		maven { url 'https://maven.aliyun.com/repository/google' }
	}
	dependencies {
		classpath 'com.android.tools.build:gradle:3.2.1'
	}
}

apply plugin: 'com.android.library'

def OUT_NAME = "lib-java"

android {
	compileSdkVersion 28
	
	compileOptions {
		encoding "UTF-8"
	}
	
	dexOptions {
		javaMaxHeapSize "4g"
		preDexLibraries false
	}
	
	lintOptions {
		abortOnError false
	}
	
	defaultConfig {
		versionCode 1
		versionName "1.0"
		minSdkVersion 21
		targetSdkVersion 28
		
		testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
	}
	
	buildTypes {
		release {
			minifyEnabled false
			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
		}
	}
	
	libraryVariants.all { variant ->
		variant.outputs.all { output ->
			outputFileName = String.format("%s-v%s-%s.aar", OUT_NAME, rootProject.ext.version, variant.buildType.name)
		}
	}
}

dependencies {
	compile fileTree(dir: 'libs', include: ['*.jar'])
	
	compile 'com.j256.ormlite:ormlite-android:5.1'
	
	compile 'com.squareup.retrofit2:retrofit:2.5.0'
	compile 'com.squareup.retrofit2:adapter-rxjava2:2.5.0'
	compile 'com.squareup.retrofit2:converter-scalars:2.5.0'
	compile 'com.squareup.retrofit2:converter-gson:2.5.0'
	
	compile 'androidx.multidex:multidex:2.0.1'
	compile 'androidx.appcompat:appcompat:1.1.0'
	compile 'androidx.recyclerview:recyclerview:1.1.0'
	compile 'androidx.constraintlayout:constraintlayout:1.1.3'
	compile 'com.google.android.material:material:1.0.0'
	
	testCompile 'junit:junit:4.12'
	androidTestCompile 'androidx.test:runner:1.2.0'
	androidTestCompile 'androidx.test.espresso:espresso-core:3.2.0'
}

task assembleJavase(type: Jar, dependsOn: "assembleDebug", group: "build") {
	delete String.format("build/outputs/jar")
	
	// 如未设置，则默认为[baseName]-[appendix]-[version]-[classifier].[extension]
	archiveName = String.format("%s-v%s-debug.jar", OUT_NAME, rootProject.ext.version)
	// 如未设置，则默认为build/libs
	destinationDir = file("$projectDir/build/outputs/jar")
	from("build/intermediates/classes/debug")
	include("com/vpdong/lib/java/javase/utils/**/*.class")
}

preBuild.dependsOn(clean)
build.dependsOn(assembleJavase)
